// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v4.22.0
// source: organization/organization.proto

package organization

import (
	context "context"
	common "github.com/OpenIMSDK/chat/pkg/proto/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string             `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID       string             `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	DepartmentInfo *common.Department `protobuf:"bytes,3,opt,name=departmentInfo,proto3" json:"departmentInfo"`
}

func (x *CreateDepartmentReq) Reset() {
	*x = CreateDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentReq) ProtoMessage() {}

func (x *CreateDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentReq.ProtoReflect.Descriptor instead.
func (*CreateDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CreateDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *CreateDepartmentReq) GetDepartmentInfo() *common.Department {
	if x != nil {
		return x.DepartmentInfo
	}
	return nil
}

type CreateDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	DepartmentInfo *common.Department `protobuf:"bytes,2,opt,name=departmentInfo,proto3" json:"departmentInfo"`
}

func (x *CreateDepartmentResp) Reset() {
	*x = CreateDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentResp) ProtoMessage() {}

func (x *CreateDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentResp.ProtoReflect.Descriptor instead.
func (*CreateDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *CreateDepartmentResp) GetDepartmentInfo() *common.Department {
	if x != nil {
		return x.DepartmentInfo
	}
	return nil
}

type UpdateDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string             `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID       string             `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	DepartmentInfo *common.Department `protobuf:"bytes,3,opt,name=departmentInfo,proto3" json:"departmentInfo"`
}

func (x *UpdateDepartmentReq) Reset() {
	*x = UpdateDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepartmentReq) ProtoMessage() {}

func (x *UpdateDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepartmentReq.ProtoReflect.Descriptor instead.
func (*UpdateDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *UpdateDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *UpdateDepartmentReq) GetDepartmentInfo() *common.Department {
	if x != nil {
		return x.DepartmentInfo
	}
	return nil
}

type UpdateDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateDepartmentResp) Reset() {
	*x = UpdateDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepartmentResp) ProtoMessage() {}

func (x *UpdateDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepartmentResp.ProtoReflect.Descriptor instead.
func (*UpdateDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetOrganizationDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID    string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
}

func (x *GetOrganizationDepartmentReq) Reset() {
	*x = GetOrganizationDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationDepartmentReq) ProtoMessage() {}

func (x *GetOrganizationDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetOrganizationDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrganizationDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetOrganizationDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type DepartmentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Department        *common.Department `protobuf:"bytes,1,opt,name=department,proto3" json:"department"`
	SubDepartmentList []*DepartmentInfo  `protobuf:"bytes,2,rep,name=subDepartmentList,proto3" json:"subDepartmentList"`
}

func (x *DepartmentInfo) Reset() {
	*x = DepartmentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepartmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepartmentInfo) ProtoMessage() {}

func (x *DepartmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepartmentInfo.ProtoReflect.Descriptor instead.
func (*DepartmentInfo) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{5}
}

func (x *DepartmentInfo) GetDepartment() *common.Department {
	if x != nil {
		return x.Department
	}
	return nil
}

func (x *DepartmentInfo) GetSubDepartmentList() []*DepartmentInfo {
	if x != nil {
		return x.SubDepartmentList
	}
	return nil
}

type GetOrganizationDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	DepartmentList []*DepartmentInfo  `protobuf:"bytes,2,rep,name=departmentList,proto3" json:"departmentList"`
}

func (x *GetOrganizationDepartmentResp) Reset() {
	*x = GetOrganizationDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationDepartmentResp) ProtoMessage() {}

func (x *GetOrganizationDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationDepartmentResp.ProtoReflect.Descriptor instead.
func (*GetOrganizationDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{6}
}

func (x *GetOrganizationDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetOrganizationDepartmentResp) GetDepartmentList() []*DepartmentInfo {
	if x != nil {
		return x.DepartmentList
	}
	return nil
}

type DeleteDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string   `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID         string   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	DepartmentIDList []string `protobuf:"bytes,3,rep,name=departmentIDList,proto3" json:"departmentIDList"`
}

func (x *DeleteDepartmentReq) Reset() {
	*x = DeleteDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDepartmentReq) ProtoMessage() {}

func (x *DeleteDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDepartmentReq.ProtoReflect.Descriptor instead.
func (*DeleteDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *DeleteDepartmentReq) GetDepartmentIDList() []string {
	if x != nil {
		return x.DepartmentIDList
	}
	return nil
}

type DeleteDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteDepartmentResp) Reset() {
	*x = DeleteDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDepartmentResp) ProtoMessage() {}

func (x *DeleteDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDepartmentResp.ProtoReflect.Descriptor instead.
func (*DeleteDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetDepartmentParentIDListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID string `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
	OperationID  string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID"`
}

func (x *GetDepartmentParentIDListReq) Reset() {
	*x = GetDepartmentParentIDListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentParentIDListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentParentIDListReq) ProtoMessage() {}

func (x *GetDepartmentParentIDListReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentParentIDListReq.ProtoReflect.Descriptor instead.
func (*GetDepartmentParentIDListReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{9}
}

func (x *GetDepartmentParentIDListReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *GetDepartmentParentIDListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetDepartmentParentIDListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	ParentIDList []string           `protobuf:"bytes,2,rep,name=parentIDList,proto3" json:"parentIDList"`
}

func (x *GetDepartmentParentIDListResp) Reset() {
	*x = GetDepartmentParentIDListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentParentIDListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentParentIDListResp) ProtoMessage() {}

func (x *GetDepartmentParentIDListResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentParentIDListResp.ProtoReflect.Descriptor instead.
func (*GetDepartmentParentIDListResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{10}
}

func (x *GetDepartmentParentIDListResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetDepartmentParentIDListResp) GetParentIDList() []string {
	if x != nil {
		return x.ParentIDList
	}
	return nil
}

type CreateOrganizationUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string                   `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID         string                   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	OrganizationUser *common.OrganizationUser `protobuf:"bytes,3,opt,name=organizationUser,proto3" json:"organizationUser"`
}

func (x *CreateOrganizationUserReq) Reset() {
	*x = CreateOrganizationUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationUserReq) ProtoMessage() {}

func (x *CreateOrganizationUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationUserReq.ProtoReflect.Descriptor instead.
func (*CreateOrganizationUserReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{11}
}

func (x *CreateOrganizationUserReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CreateOrganizationUserReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *CreateOrganizationUserReq) GetOrganizationUser() *common.OrganizationUser {
	if x != nil {
		return x.OrganizationUser
	}
	return nil
}

type CreateOrganizationUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *CreateOrganizationUserResp) Reset() {
	*x = CreateOrganizationUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationUserResp) ProtoMessage() {}

func (x *CreateOrganizationUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationUserResp.ProtoReflect.Descriptor instead.
func (*CreateOrganizationUserResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{12}
}

func (x *CreateOrganizationUserResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type UpdateOrganizationUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string                   `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID         string                   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	OrganizationUser *common.OrganizationUser `protobuf:"bytes,3,opt,name=organizationUser,proto3" json:"organizationUser"`
}

func (x *UpdateOrganizationUserReq) Reset() {
	*x = UpdateOrganizationUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationUserReq) ProtoMessage() {}

func (x *UpdateOrganizationUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationUserReq.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationUserReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateOrganizationUserReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *UpdateOrganizationUserReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *UpdateOrganizationUserReq) GetOrganizationUser() *common.OrganizationUser {
	if x != nil {
		return x.OrganizationUser
	}
	return nil
}

type UpdateOrganizationUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateOrganizationUserResp) Reset() {
	*x = UpdateOrganizationUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationUserResp) ProtoMessage() {}

func (x *UpdateOrganizationUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationUserResp.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationUserResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateOrganizationUserResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type CreateDepartmentMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string                   `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID         string                   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	DepartmentMember *common.DepartmentMember `protobuf:"bytes,3,opt,name=departmentMember,proto3" json:"departmentMember"`
}

func (x *CreateDepartmentMemberReq) Reset() {
	*x = CreateDepartmentMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentMemberReq) ProtoMessage() {}

func (x *CreateDepartmentMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentMemberReq.ProtoReflect.Descriptor instead.
func (*CreateDepartmentMemberReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{15}
}

func (x *CreateDepartmentMemberReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CreateDepartmentMemberReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *CreateDepartmentMemberReq) GetDepartmentMember() *common.DepartmentMember {
	if x != nil {
		return x.DepartmentMember
	}
	return nil
}

type CreateDepartmentMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *CreateDepartmentMemberResp) Reset() {
	*x = CreateDepartmentMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentMemberResp) ProtoMessage() {}

func (x *CreateDepartmentMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentMemberResp.ProtoReflect.Descriptor instead.
func (*CreateDepartmentMemberResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{16}
}

func (x *CreateDepartmentMemberResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetUserInDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID    string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	UserID      string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID"`
}

func (x *GetUserInDepartmentReq) Reset() {
	*x = GetUserInDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInDepartmentReq) ProtoMessage() {}

func (x *GetUserInDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetUserInDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserInDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetUserInDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetUserInDepartmentReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserInDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp       *common.CommonResp       `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	UserInDepartment *common.UserInDepartment `protobuf:"bytes,3,opt,name=userInDepartment,proto3" json:"userInDepartment"`
}

func (x *GetUserInDepartmentResp) Reset() {
	*x = GetUserInDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInDepartmentResp) ProtoMessage() {}

func (x *GetUserInDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInDepartmentResp.ProtoReflect.Descriptor instead.
func (*GetUserInDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserInDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserInDepartmentResp) GetUserInDepartment() *common.UserInDepartment {
	if x != nil {
		return x.UserInDepartment
	}
	return nil
}

type UpdateUserInDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string                   `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID         string                   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	DepartmentMember *common.DepartmentMember `protobuf:"bytes,3,opt,name=departmentMember,proto3" json:"departmentMember"`
}

func (x *UpdateUserInDepartmentReq) Reset() {
	*x = UpdateUserInDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInDepartmentReq) ProtoMessage() {}

func (x *UpdateUserInDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInDepartmentReq.ProtoReflect.Descriptor instead.
func (*UpdateUserInDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateUserInDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *UpdateUserInDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *UpdateUserInDepartmentReq) GetDepartmentMember() *common.DepartmentMember {
	if x != nil {
		return x.DepartmentMember
	}
	return nil
}

type UpdateUserInDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *UpdateUserInDepartmentResp) Reset() {
	*x = UpdateUserInDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInDepartmentResp) ProtoMessage() {}

func (x *UpdateUserInDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInDepartmentResp.ProtoReflect.Descriptor instead.
func (*UpdateUserInDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateUserInDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteUserInDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID     string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	UserID       string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID"`
	DepartmentID string `protobuf:"bytes,4,opt,name=departmentID,proto3" json:"departmentID"`
}

func (x *DeleteUserInDepartmentReq) Reset() {
	*x = DeleteUserInDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserInDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserInDepartmentReq) ProtoMessage() {}

func (x *DeleteUserInDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserInDepartmentReq.ProtoReflect.Descriptor instead.
func (*DeleteUserInDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteUserInDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteUserInDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *DeleteUserInDepartmentReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeleteUserInDepartmentReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

type DeleteUserInDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteUserInDepartmentResp) Reset() {
	*x = DeleteUserInDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserInDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserInDepartmentResp) ProtoMessage() {}

func (x *DeleteUserInDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserInDepartmentResp.ProtoReflect.Descriptor instead.
func (*DeleteUserInDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteUserInDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteOrganizationUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID    string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	UserID      string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID"`
}

func (x *DeleteOrganizationUserReq) Reset() {
	*x = DeleteOrganizationUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationUserReq) ProtoMessage() {}

func (x *DeleteOrganizationUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationUserReq.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationUserReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteOrganizationUserReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteOrganizationUserReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *DeleteOrganizationUserReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type DeleteOrganizationUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *DeleteOrganizationUserResp) Reset() {
	*x = DeleteOrganizationUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationUserResp) ProtoMessage() {}

func (x *DeleteOrganizationUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationUserResp.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationUserResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteOrganizationUserResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetDepartmentRelatedGroupIDListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string   `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID         string   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	DepartmentIDList []string `protobuf:"bytes,3,rep,name=departmentIDList,proto3" json:"departmentIDList"`
}

func (x *GetDepartmentRelatedGroupIDListReq) Reset() {
	*x = GetDepartmentRelatedGroupIDListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentRelatedGroupIDListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentRelatedGroupIDListReq) ProtoMessage() {}

func (x *GetDepartmentRelatedGroupIDListReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentRelatedGroupIDListReq.ProtoReflect.Descriptor instead.
func (*GetDepartmentRelatedGroupIDListReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{25}
}

func (x *GetDepartmentRelatedGroupIDListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetDepartmentRelatedGroupIDListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetDepartmentRelatedGroupIDListReq) GetDepartmentIDList() []string {
	if x != nil {
		return x.DepartmentIDList
	}
	return nil
}

type GetDepartmentRelatedGroupIDListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	GroupIDList []string           `protobuf:"bytes,3,rep,name=groupIDList,proto3" json:"groupIDList"`
}

func (x *GetDepartmentRelatedGroupIDListResp) Reset() {
	*x = GetDepartmentRelatedGroupIDListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentRelatedGroupIDListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentRelatedGroupIDListResp) ProtoMessage() {}

func (x *GetDepartmentRelatedGroupIDListResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentRelatedGroupIDListResp.ProtoReflect.Descriptor instead.
func (*GetDepartmentRelatedGroupIDListResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{26}
}

func (x *GetDepartmentRelatedGroupIDListResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetDepartmentRelatedGroupIDListResp) GetGroupIDList() []string {
	if x != nil {
		return x.GroupIDList
	}
	return nil
}

type GetUserInOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDList  []string `protobuf:"bytes,1,rep,name=userIDList,proto3" json:"userIDList"`
	OperationID string   `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID"`
}

func (x *GetUserInOrganizationReq) Reset() {
	*x = GetUserInOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInOrganizationReq) ProtoMessage() {}

func (x *GetUserInOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInOrganizationReq.ProtoReflect.Descriptor instead.
func (*GetUserInOrganizationReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{27}
}

func (x *GetUserInOrganizationReq) GetUserIDList() []string {
	if x != nil {
		return x.UserIDList
	}
	return nil
}

func (x *GetUserInOrganizationReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetUserInOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp        *common.CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	OrganizationUsers []*common.OrganizationUser `protobuf:"bytes,3,rep,name=organizationUsers,proto3" json:"organizationUsers"`
}

func (x *GetUserInOrganizationResp) Reset() {
	*x = GetUserInOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInOrganizationResp) ProtoMessage() {}

func (x *GetUserInOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInOrganizationResp.ProtoReflect.Descriptor instead.
func (*GetUserInOrganizationResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserInOrganizationResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserInOrganizationResp) GetOrganizationUsers() []*common.OrganizationUser {
	if x != nil {
		return x.OrganizationUsers
	}
	return nil
}

type GetCompleteOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID    string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
}

func (x *GetCompleteOrganizationReq) Reset() {
	*x = GetCompleteOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompleteOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompleteOrganizationReq) ProtoMessage() {}

func (x *GetCompleteOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompleteOrganizationReq.ProtoReflect.Descriptor instead.
func (*GetCompleteOrganizationReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{29}
}

func (x *GetCompleteOrganizationReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetCompleteOrganizationReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type CompleteOrganization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeopleNumber   uint32                  `protobuf:"varint,1,opt,name=peopleNumber,proto3" json:"peopleNumber"`
	List           []*CompleteOrganization `protobuf:"bytes,2,rep,name=list,proto3" json:"list"`
	DepartmentID   string                  `protobuf:"bytes,3,opt,name=departmentID,proto3" json:"departmentID"`
	FaceURL        string                  `protobuf:"bytes,4,opt,name=faceURL,proto3" json:"faceURL"`
	Name           string                  `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	ParentID       string                  `protobuf:"bytes,6,opt,name=parentID,proto3" json:"parentID"`
	Order          int32                   `protobuf:"varint,7,opt,name=order,proto3" json:"order"`
	DepartmentType int32                   `protobuf:"varint,8,opt,name=departmentType,proto3" json:"departmentType"`
	CreateTime     uint32                  `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime"`
	Ex             string                  `protobuf:"bytes,10,opt,name=ex,proto3" json:"ex"`
}

func (x *CompleteOrganization) Reset() {
	*x = CompleteOrganization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteOrganization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteOrganization) ProtoMessage() {}

func (x *CompleteOrganization) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteOrganization.ProtoReflect.Descriptor instead.
func (*CompleteOrganization) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{30}
}

func (x *CompleteOrganization) GetPeopleNumber() uint32 {
	if x != nil {
		return x.PeopleNumber
	}
	return 0
}

func (x *CompleteOrganization) GetList() []*CompleteOrganization {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CompleteOrganization) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *CompleteOrganization) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *CompleteOrganization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompleteOrganization) GetParentID() string {
	if x != nil {
		return x.ParentID
	}
	return ""
}

func (x *CompleteOrganization) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CompleteOrganization) GetDepartmentType() int32 {
	if x != nil {
		return x.DepartmentType
	}
	return 0
}

func (x *CompleteOrganization) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CompleteOrganization) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type GetCompleteOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp      `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	List       []*CompleteOrganization `protobuf:"bytes,3,rep,name=list,proto3" json:"list"`
}

func (x *GetCompleteOrganizationResp) Reset() {
	*x = GetCompleteOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompleteOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompleteOrganizationResp) ProtoMessage() {}

func (x *GetCompleteOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompleteOrganizationResp.ProtoReflect.Descriptor instead.
func (*GetCompleteOrganizationResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{31}
}

func (x *GetCompleteOrganizationResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetCompleteOrganizationResp) GetList() []*CompleteOrganization {
	if x != nil {
		return x.List
	}
	return nil
}

type GetUsersInDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string   `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID    string   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	UserIDList  []string `protobuf:"bytes,3,rep,name=userIDList,proto3" json:"userIDList"`
}

func (x *GetUsersInDepartmentReq) Reset() {
	*x = GetUsersInDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersInDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersInDepartmentReq) ProtoMessage() {}

func (x *GetUsersInDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersInDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetUsersInDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{32}
}

func (x *GetUsersInDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetUsersInDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetUsersInDepartmentReq) GetUserIDList() []string {
	if x != nil {
		return x.UserIDList
	}
	return nil
}

type GetUsersInDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	List       []*common.UserInDepartment `protobuf:"bytes,3,rep,name=list,proto3" json:"list"`
}

func (x *GetUsersInDepartmentResp) Reset() {
	*x = GetUsersInDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersInDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersInDepartmentResp) ProtoMessage() {}

func (x *GetUsersInDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersInDepartmentResp.ProtoReflect.Descriptor instead.
func (*GetUsersInDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{33}
}

func (x *GetUsersInDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUsersInDepartmentResp) GetList() []*common.UserInDepartment {
	if x != nil {
		return x.List
	}
	return nil
}

type GetSearchUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string                   `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID         string                   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	PageNumber       uint32                   `protobuf:"varint,3,opt,name=pageNumber,proto3" json:"pageNumber"`
	ShowNumber       uint32                   `protobuf:"varint,4,opt,name=showNumber,proto3" json:"showNumber"`
	Text             string                   `protobuf:"bytes,5,opt,name=text,proto3" json:"text"`
	Sorts            []*GetSearchUserListSort `protobuf:"bytes,6,rep,name=sorts,proto3" json:"sorts"`
	DepartmentIDList []string                 `protobuf:"bytes,7,rep,name=departmentIDList,proto3" json:"departmentIDList"`
	PositionList     []string                 `protobuf:"bytes,8,rep,name=positionList,proto3" json:"positionList"`
}

func (x *GetSearchUserListReq) Reset() {
	*x = GetSearchUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSearchUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchUserListReq) ProtoMessage() {}

func (x *GetSearchUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchUserListReq.ProtoReflect.Descriptor instead.
func (*GetSearchUserListReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{34}
}

func (x *GetSearchUserListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetSearchUserListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetSearchUserListReq) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetSearchUserListReq) GetShowNumber() uint32 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

func (x *GetSearchUserListReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GetSearchUserListReq) GetSorts() []*GetSearchUserListSort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *GetSearchUserListReq) GetDepartmentIDList() []string {
	if x != nil {
		return x.DepartmentIDList
	}
	return nil
}

func (x *GetSearchUserListReq) GetPositionList() []string {
	if x != nil {
		return x.PositionList
	}
	return nil
}

type GetSearchUserListSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field"`
	Rule  string `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule"`
}

func (x *GetSearchUserListSort) Reset() {
	*x = GetSearchUserListSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSearchUserListSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchUserListSort) ProtoMessage() {}

func (x *GetSearchUserListSort) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchUserListSort.ProtoReflect.Descriptor instead.
func (*GetSearchUserListSort) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{35}
}

func (x *GetSearchUserListSort) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *GetSearchUserListSort) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

type GetSearchUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	UserList   []*common.UserInDepartment `protobuf:"bytes,2,rep,name=userList,proto3" json:"userList"`
	Total      uint32                     `protobuf:"varint,3,opt,name=Total,proto3" json:"Total"`
}

func (x *GetSearchUserListResp) Reset() {
	*x = GetSearchUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSearchUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchUserListResp) ProtoMessage() {}

func (x *GetSearchUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchUserListResp.ProtoReflect.Descriptor instead.
func (*GetSearchUserListResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{36}
}

func (x *GetSearchUserListResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetSearchUserListResp) GetUserList() []*common.UserInDepartment {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *GetSearchUserListResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SetOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string               `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID     string               `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	Organization *common.Organization `protobuf:"bytes,3,opt,name=organization,proto3" json:"organization"`
}

func (x *SetOrganizationReq) Reset() {
	*x = SetOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrganizationReq) ProtoMessage() {}

func (x *SetOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrganizationReq.ProtoReflect.Descriptor instead.
func (*SetOrganizationReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{37}
}

func (x *SetOrganizationReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SetOrganizationReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *SetOrganizationReq) GetOrganization() *common.Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type SetOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *SetOrganizationResp) Reset() {
	*x = SetOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrganizationResp) ProtoMessage() {}

func (x *SetOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrganizationResp.ProtoReflect.Descriptor instead.
func (*SetOrganizationResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{38}
}

func (x *SetOrganizationResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetOrganizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID    string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
}

func (x *GetOrganizationReq) Reset() {
	*x = GetOrganizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationReq) ProtoMessage() {}

func (x *GetOrganizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationReq.ProtoReflect.Descriptor instead.
func (*GetOrganizationReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{39}
}

func (x *GetOrganizationReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetOrganizationReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type GetOrganizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *common.CommonResp   `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Organization *common.Organization `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization"`
}

func (x *GetOrganizationResp) Reset() {
	*x = GetOrganizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationResp) ProtoMessage() {}

func (x *GetOrganizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationResp.ProtoReflect.Descriptor instead.
func (*GetOrganizationResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{40}
}

func (x *GetOrganizationResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetOrganizationResp) GetOrganization() *common.Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type GetSubDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID     string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	DepartmentID string `protobuf:"bytes,3,opt,name=departmentID,proto3" json:"departmentID"`
}

func (x *GetSubDepartmentReq) Reset() {
	*x = GetSubDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubDepartmentReq) ProtoMessage() {}

func (x *GetSubDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetSubDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{41}
}

func (x *GetSubDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetSubDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetSubDepartmentReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

type GetSubDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp              *common.CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	DepartmentMemberList    []*common.DepartmentMember `protobuf:"bytes,2,rep,name=departmentMemberList,proto3" json:"departmentMemberList"`
	DepartmentList          []*common.Department       `protobuf:"bytes,3,rep,name=departmentList,proto3" json:"departmentList"`
	DepartmentDirectoryList []*common.Department       `protobuf:"bytes,4,rep,name=departmentDirectoryList,proto3" json:"departmentDirectoryList"`
}

func (x *GetSubDepartmentResp) Reset() {
	*x = GetSubDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubDepartmentResp) ProtoMessage() {}

func (x *GetSubDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubDepartmentResp.ProtoReflect.Descriptor instead.
func (*GetSubDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{42}
}

func (x *GetSubDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetSubDepartmentResp) GetDepartmentMemberList() []*common.DepartmentMember {
	if x != nil {
		return x.DepartmentMemberList
	}
	return nil
}

func (x *GetSubDepartmentResp) GetDepartmentList() []*common.Department {
	if x != nil {
		return x.DepartmentList
	}
	return nil
}

func (x *GetSubDepartmentResp) GetDepartmentDirectoryList() []*common.Department {
	if x != nil {
		return x.DepartmentDirectoryList
	}
	return nil
}

type GetSearchDepartmentUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID        string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID           string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	Keyword            string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword"`
	IsGetAllDepartment bool   `protobuf:"varint,4,opt,name=IsGetAllDepartment,proto3" json:"IsGetAllDepartment"`
}

func (x *GetSearchDepartmentUserReq) Reset() {
	*x = GetSearchDepartmentUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSearchDepartmentUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchDepartmentUserReq) ProtoMessage() {}

func (x *GetSearchDepartmentUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchDepartmentUserReq.ProtoReflect.Descriptor instead.
func (*GetSearchDepartmentUserReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{43}
}

func (x *GetSearchDepartmentUserReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetSearchDepartmentUserReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetSearchDepartmentUserReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetSearchDepartmentUserReq) GetIsGetAllDepartment() bool {
	if x != nil {
		return x.IsGetAllDepartment
	}
	return false
}

type GetSearchDepartmentUserOrganizationUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationUser *common.OrganizationUser `protobuf:"bytes,1,opt,name=organizationUser,proto3" json:"organizationUser"`
	DepartmentList   []*common.Department     `protobuf:"bytes,2,rep,name=departmentList,proto3" json:"departmentList"`
	Position         string                   `protobuf:"bytes,3,opt,name=position,proto3" json:"position"`
}

func (x *GetSearchDepartmentUserOrganizationUser) Reset() {
	*x = GetSearchDepartmentUserOrganizationUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSearchDepartmentUserOrganizationUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchDepartmentUserOrganizationUser) ProtoMessage() {}

func (x *GetSearchDepartmentUserOrganizationUser) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchDepartmentUserOrganizationUser.ProtoReflect.Descriptor instead.
func (*GetSearchDepartmentUserOrganizationUser) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{44}
}

func (x *GetSearchDepartmentUserOrganizationUser) GetOrganizationUser() *common.OrganizationUser {
	if x != nil {
		return x.OrganizationUser
	}
	return nil
}

func (x *GetSearchDepartmentUserOrganizationUser) GetDepartmentList() []*common.Department {
	if x != nil {
		return x.DepartmentList
	}
	return nil
}

func (x *GetSearchDepartmentUserOrganizationUser) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type GetSearchDepartmentUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp           *common.CommonResp                         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	DepartmentList       []*common.Department                       `protobuf:"bytes,2,rep,name=departmentList,proto3" json:"departmentList"`
	OrganizationUserList []*GetSearchDepartmentUserOrganizationUser `protobuf:"bytes,3,rep,name=organizationUserList,proto3" json:"organizationUserList"`
}

func (x *GetSearchDepartmentUserResp) Reset() {
	*x = GetSearchDepartmentUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSearchDepartmentUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchDepartmentUserResp) ProtoMessage() {}

func (x *GetSearchDepartmentUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchDepartmentUserResp.ProtoReflect.Descriptor instead.
func (*GetSearchDepartmentUserResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{45}
}

func (x *GetSearchDepartmentUserResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetSearchDepartmentUserResp) GetDepartmentList() []*common.Department {
	if x != nil {
		return x.DepartmentList
	}
	return nil
}

func (x *GetSearchDepartmentUserResp) GetOrganizationUserList() []*GetSearchDepartmentUserOrganizationUser {
	if x != nil {
		return x.OrganizationUserList
	}
	return nil
}

type SortDepartmentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID         string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	DepartmentID     string `protobuf:"bytes,3,opt,name=departmentID,proto3" json:"departmentID"`
	ParentID         string `protobuf:"bytes,4,opt,name=parentID,proto3" json:"parentID"`
	NextDepartmentID string `protobuf:"bytes,5,opt,name=nextDepartmentID,proto3" json:"nextDepartmentID"`
}

func (x *SortDepartmentListReq) Reset() {
	*x = SortDepartmentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortDepartmentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortDepartmentListReq) ProtoMessage() {}

func (x *SortDepartmentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortDepartmentListReq.ProtoReflect.Descriptor instead.
func (*SortDepartmentListReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{46}
}

func (x *SortDepartmentListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SortDepartmentListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *SortDepartmentListReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *SortDepartmentListReq) GetParentID() string {
	if x != nil {
		return x.ParentID
	}
	return ""
}

func (x *SortDepartmentListReq) GetNextDepartmentID() string {
	if x != nil {
		return x.NextDepartmentID
	}
	return ""
}

type SortDepartmentListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *SortDepartmentListResp) Reset() {
	*x = SortDepartmentListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortDepartmentListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortDepartmentListResp) ProtoMessage() {}

func (x *SortDepartmentListResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortDepartmentListResp.ProtoReflect.Descriptor instead.
func (*SortDepartmentListResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{47}
}

func (x *SortDepartmentListResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SortOrganizationUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID     string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	DepartmentID string `protobuf:"bytes,3,opt,name=departmentID,proto3" json:"departmentID"`
	UserID       string `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID"`
	NextUserID   string `protobuf:"bytes,5,opt,name=nextUserID,proto3" json:"nextUserID"`
}

func (x *SortOrganizationUserListReq) Reset() {
	*x = SortOrganizationUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortOrganizationUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOrganizationUserListReq) ProtoMessage() {}

func (x *SortOrganizationUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOrganizationUserListReq.ProtoReflect.Descriptor instead.
func (*SortOrganizationUserListReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{48}
}

func (x *SortOrganizationUserListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SortOrganizationUserListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *SortOrganizationUserListReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *SortOrganizationUserListReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SortOrganizationUserListReq) GetNextUserID() string {
	if x != nil {
		return x.NextUserID
	}
	return ""
}

type SortOrganizationUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *SortOrganizationUserListResp) Reset() {
	*x = SortOrganizationUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortOrganizationUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOrganizationUserListResp) ProtoMessage() {}

func (x *SortOrganizationUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOrganizationUserListResp.ProtoReflect.Descriptor instead.
func (*SortOrganizationUserListResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{49}
}

func (x *SortOrganizationUserListResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID     string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	DepartmentID string `protobuf:"bytes,3,opt,name=departmentID,proto3" json:"departmentID"`
}

func (x *GetDepartmentReq) Reset() {
	*x = GetDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentReq) ProtoMessage() {}

func (x *GetDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{50}
}

func (x *GetDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetDepartmentReq) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

type GetDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	Department *common.Department `protobuf:"bytes,2,opt,name=department,proto3" json:"department"`
}

func (x *GetDepartmentResp) Reset() {
	*x = GetDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentResp) ProtoMessage() {}

func (x *GetDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentResp.ProtoReflect.Descriptor instead.
func (*GetDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{51}
}

func (x *GetDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetDepartmentResp) GetDepartment() *common.Department {
	if x != nil {
		return x.Department
	}
	return nil
}

type CreateNewOrganizationMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID          string                     `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID             string                     `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	OrganizationUser     *common.OrganizationUser   `protobuf:"bytes,3,opt,name=organizationUser,proto3" json:"organizationUser"`
	DepartmentMemberList []*common.DepartmentMember `protobuf:"bytes,4,rep,name=departmentMemberList,proto3" json:"departmentMemberList"`
	UserIdentity         *common.UserIdentity       `protobuf:"bytes,5,opt,name=userIdentity,proto3" json:"userIdentity"`
}

func (x *CreateNewOrganizationMemberReq) Reset() {
	*x = CreateNewOrganizationMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewOrganizationMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewOrganizationMemberReq) ProtoMessage() {}

func (x *CreateNewOrganizationMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewOrganizationMemberReq.ProtoReflect.Descriptor instead.
func (*CreateNewOrganizationMemberReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{52}
}

func (x *CreateNewOrganizationMemberReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CreateNewOrganizationMemberReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *CreateNewOrganizationMemberReq) GetOrganizationUser() *common.OrganizationUser {
	if x != nil {
		return x.OrganizationUser
	}
	return nil
}

func (x *CreateNewOrganizationMemberReq) GetDepartmentMemberList() []*common.DepartmentMember {
	if x != nil {
		return x.DepartmentMemberList
	}
	return nil
}

func (x *CreateNewOrganizationMemberReq) GetUserIdentity() *common.UserIdentity {
	if x != nil {
		return x.UserIdentity
	}
	return nil
}

type CreateNewOrganizationMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *CreateNewOrganizationMemberResp) Reset() {
	*x = CreateNewOrganizationMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewOrganizationMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewOrganizationMemberResp) ProtoMessage() {}

func (x *CreateNewOrganizationMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewOrganizationMemberResp.ProtoReflect.Descriptor instead.
func (*CreateNewOrganizationMemberResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{53}
}

func (x *CreateNewOrganizationMemberResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID    string `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	UserID      string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID"`
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{54}
}

func (x *GetUserInfoReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetUserInfoReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetUserInfoReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp       `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	User       *common.OrganizationUser `protobuf:"bytes,2,opt,name=user,proto3" json:"user"`
}

func (x *GetUserInfoResp) Reset() {
	*x = GetUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResp) ProtoMessage() {}

func (x *GetUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResp.ProtoReflect.Descriptor instead.
func (*GetUserInfoResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{55}
}

func (x *GetUserInfoResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserInfoResp) GetUser() *common.OrganizationUser {
	if x != nil {
		return x.User
	}
	return nil
}

type BatchImportUserDepartmentName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HierarchyName []string `protobuf:"bytes,1,rep,name=hierarchyName,proto3" json:"hierarchyName"`
}

func (x *BatchImportUserDepartmentName) Reset() {
	*x = BatchImportUserDepartmentName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchImportUserDepartmentName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchImportUserDepartmentName) ProtoMessage() {}

func (x *BatchImportUserDepartmentName) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchImportUserDepartmentName.ProtoReflect.Descriptor instead.
func (*BatchImportUserDepartmentName) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{56}
}

func (x *BatchImportUserDepartmentName) GetHierarchyName() []string {
	if x != nil {
		return x.HierarchyName
	}
	return nil
}

type BatchImportUserDepartmentNamePosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HierarchyName []string `protobuf:"bytes,1,rep,name=hierarchyName,proto3" json:"hierarchyName"`
	Position      string   `protobuf:"bytes,2,opt,name=position,proto3" json:"position"`
}

func (x *BatchImportUserDepartmentNamePosition) Reset() {
	*x = BatchImportUserDepartmentNamePosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchImportUserDepartmentNamePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchImportUserDepartmentNamePosition) ProtoMessage() {}

func (x *BatchImportUserDepartmentNamePosition) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchImportUserDepartmentNamePosition.ProtoReflect.Descriptor instead.
func (*BatchImportUserDepartmentNamePosition) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{57}
}

func (x *BatchImportUserDepartmentNamePosition) GetHierarchyName() []string {
	if x != nil {
		return x.HierarchyName
	}
	return nil
}

func (x *BatchImportUserDepartmentNamePosition) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type BatchImportUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID                 string                                   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	Nickname               string                                   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname"`
	EnglishName            string                                   `protobuf:"bytes,3,opt,name=englishName,proto3" json:"englishName"`
	FaceURL                string                                   `protobuf:"bytes,4,opt,name=faceURL,proto3" json:"faceURL"`
	Gender                 int32                                    `protobuf:"varint,5,opt,name=gender,proto3" json:"gender"`
	Mobile                 string                                   `protobuf:"bytes,6,opt,name=mobile,proto3" json:"mobile"`
	Telephone              string                                   `protobuf:"bytes,7,opt,name=telephone,proto3" json:"telephone"`
	Birth                  int64                                    `protobuf:"varint,8,opt,name=birth,proto3" json:"birth"`
	Email                  string                                   `protobuf:"bytes,9,opt,name=email,proto3" json:"email"`
	Account                string                                   `protobuf:"bytes,10,opt,name=account,proto3" json:"account"`
	Password               string                                   `protobuf:"bytes,11,opt,name=password,proto3" json:"password"`
	UserDepartmentNameList []*BatchImportUserDepartmentNamePosition `protobuf:"bytes,12,rep,name=userDepartmentNameList,proto3" json:"userDepartmentNameList"`
	Order                  int32                                    `protobuf:"varint,13,opt,name=order,proto3" json:"order"`
	Status                 int32                                    `protobuf:"varint,14,opt,name=status,proto3" json:"status"`
	AreaCode               string                                   `protobuf:"bytes,15,opt,name=areaCode,proto3" json:"areaCode"`
	Station                string                                   `protobuf:"bytes,16,opt,name=station,proto3" json:"station"`
}

func (x *BatchImportUser) Reset() {
	*x = BatchImportUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchImportUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchImportUser) ProtoMessage() {}

func (x *BatchImportUser) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchImportUser.ProtoReflect.Descriptor instead.
func (*BatchImportUser) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{58}
}

func (x *BatchImportUser) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *BatchImportUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *BatchImportUser) GetEnglishName() string {
	if x != nil {
		return x.EnglishName
	}
	return ""
}

func (x *BatchImportUser) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *BatchImportUser) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *BatchImportUser) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *BatchImportUser) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *BatchImportUser) GetBirth() int64 {
	if x != nil {
		return x.Birth
	}
	return 0
}

func (x *BatchImportUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BatchImportUser) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *BatchImportUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *BatchImportUser) GetUserDepartmentNameList() []*BatchImportUserDepartmentNamePosition {
	if x != nil {
		return x.UserDepartmentNameList
	}
	return nil
}

func (x *BatchImportUser) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *BatchImportUser) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BatchImportUser) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *BatchImportUser) GetStation() string {
	if x != nil {
		return x.Station
	}
	return ""
}

type BatchImportDepartment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentID         string                         `protobuf:"bytes,1,opt,name=departmentID,proto3" json:"departmentID"`
	FaceURL              string                         `protobuf:"bytes,2,opt,name=faceURL,proto3" json:"faceURL"`
	Name                 string                         `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	ParentID             string                         `protobuf:"bytes,4,opt,name=parentID,proto3" json:"parentID"`
	Order                int32                          `protobuf:"varint,5,opt,name=order,proto3" json:"order"`
	DepartmentType       int32                          `protobuf:"varint,6,opt,name=departmentType,proto3" json:"departmentType"`
	RelatedGroupID       string                         `protobuf:"bytes,7,opt,name=relatedGroupID,proto3" json:"relatedGroupID"`
	ParentDepartmentName *BatchImportUserDepartmentName `protobuf:"bytes,11,opt,name=parentDepartmentName,proto3" json:"parentDepartmentName"`
}

func (x *BatchImportDepartment) Reset() {
	*x = BatchImportDepartment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchImportDepartment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchImportDepartment) ProtoMessage() {}

func (x *BatchImportDepartment) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchImportDepartment.ProtoReflect.Descriptor instead.
func (*BatchImportDepartment) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{59}
}

func (x *BatchImportDepartment) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *BatchImportDepartment) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *BatchImportDepartment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BatchImportDepartment) GetParentID() string {
	if x != nil {
		return x.ParentID
	}
	return ""
}

func (x *BatchImportDepartment) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *BatchImportDepartment) GetDepartmentType() int32 {
	if x != nil {
		return x.DepartmentType
	}
	return 0
}

func (x *BatchImportDepartment) GetRelatedGroupID() string {
	if x != nil {
		return x.RelatedGroupID
	}
	return ""
}

func (x *BatchImportDepartment) GetParentDepartmentName() *BatchImportUserDepartmentName {
	if x != nil {
		return x.ParentDepartmentName
	}
	return nil
}

type BatchImportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string                   `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID       string                   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	UserList       []*BatchImportUser       `protobuf:"bytes,3,rep,name=userList,proto3" json:"userList"`
	DepartmentList []*BatchImportDepartment `protobuf:"bytes,4,rep,name=departmentList,proto3" json:"departmentList"`
}

func (x *BatchImportReq) Reset() {
	*x = BatchImportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchImportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchImportReq) ProtoMessage() {}

func (x *BatchImportReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchImportReq.ProtoReflect.Descriptor instead.
func (*BatchImportReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{60}
}

func (x *BatchImportReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *BatchImportReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *BatchImportReq) GetUserList() []*BatchImportUser {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *BatchImportReq) GetDepartmentList() []*BatchImportDepartment {
	if x != nil {
		return x.DepartmentList
	}
	return nil
}

type BatchImportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *BatchImportResp) Reset() {
	*x = BatchImportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchImportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchImportResp) ProtoMessage() {}

func (x *BatchImportResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchImportResp.ProtoReflect.Descriptor instead.
func (*BatchImportResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{61}
}

func (x *BatchImportResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type MoveUserDepartment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID              string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	DepartmentID        string `protobuf:"bytes,2,opt,name=departmentID,proto3" json:"departmentID"`
	CurrentDepartmentID string `protobuf:"bytes,3,opt,name=currentDepartmentID,proto3" json:"currentDepartmentID"`
	Position            string `protobuf:"bytes,4,opt,name=position,proto3" json:"position"`
	Leader              int32  `protobuf:"varint,5,opt,name=leader,proto3" json:"leader"`
	Status              int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status"`
	EntryTime           int64  `protobuf:"varint,7,opt,name=entryTime,proto3" json:"entryTime"`
	TerminationTime     int64  `protobuf:"varint,8,opt,name=terminationTime,proto3" json:"terminationTime"`
	Order               int32  `protobuf:"varint,9,opt,name=order,proto3" json:"order"`
}

func (x *MoveUserDepartment) Reset() {
	*x = MoveUserDepartment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveUserDepartment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveUserDepartment) ProtoMessage() {}

func (x *MoveUserDepartment) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveUserDepartment.ProtoReflect.Descriptor instead.
func (*MoveUserDepartment) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{62}
}

func (x *MoveUserDepartment) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MoveUserDepartment) GetDepartmentID() string {
	if x != nil {
		return x.DepartmentID
	}
	return ""
}

func (x *MoveUserDepartment) GetCurrentDepartmentID() string {
	if x != nil {
		return x.CurrentDepartmentID
	}
	return ""
}

func (x *MoveUserDepartment) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *MoveUserDepartment) GetLeader() int32 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *MoveUserDepartment) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MoveUserDepartment) GetEntryTime() int64 {
	if x != nil {
		return x.EntryTime
	}
	return 0
}

func (x *MoveUserDepartment) GetTerminationTime() int64 {
	if x != nil {
		return x.TerminationTime
	}
	return 0
}

func (x *MoveUserDepartment) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type MoveUserDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID            string                `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID               string                `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	MoveUserDepartmentList []*MoveUserDepartment `protobuf:"bytes,3,rep,name=moveUserDepartmentList,proto3" json:"moveUserDepartmentList"`
}

func (x *MoveUserDepartmentReq) Reset() {
	*x = MoveUserDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveUserDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveUserDepartmentReq) ProtoMessage() {}

func (x *MoveUserDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveUserDepartmentReq.ProtoReflect.Descriptor instead.
func (*MoveUserDepartmentReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{63}
}

func (x *MoveUserDepartmentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *MoveUserDepartmentReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *MoveUserDepartmentReq) GetMoveUserDepartmentList() []*MoveUserDepartment {
	if x != nil {
		return x.MoveUserDepartmentList
	}
	return nil
}

type MoveUserDepartmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *common.CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
}

func (x *MoveUserDepartmentResp) Reset() {
	*x = MoveUserDepartmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveUserDepartmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveUserDepartmentResp) ProtoMessage() {}

func (x *MoveUserDepartmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveUserDepartmentResp.ProtoReflect.Descriptor instead.
func (*MoveUserDepartmentResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{64}
}

func (x *MoveUserDepartmentResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetUserFullListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string   `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID"`
	OpUserID    string   `protobuf:"bytes,2,opt,name=opUserID,proto3" json:"opUserID"`
	PageNumber  int32    `protobuf:"varint,3,opt,name=pageNumber,proto3" json:"pageNumber"`
	ShowNumber  int32    `protobuf:"varint,4,opt,name=showNumber,proto3" json:"showNumber"`
	UserIDList  []string `protobuf:"bytes,5,rep,name=userIDList,proto3" json:"userIDList"`
}

func (x *GetUserFullListReq) Reset() {
	*x = GetUserFullListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFullListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFullListReq) ProtoMessage() {}

func (x *GetUserFullListReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFullListReq.ProtoReflect.Descriptor instead.
func (*GetUserFullListReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{65}
}

func (x *GetUserFullListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetUserFullListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetUserFullListReq) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetUserFullListReq) GetShowNumber() int32 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

func (x *GetUserFullListReq) GetUserIDList() []string {
	if x != nil {
		return x.UserIDList
	}
	return nil
}

type GetUserFullListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp           *common.CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	OrganizationUserList []*common.OrganizationUser `protobuf:"bytes,2,rep,name=organizationUserList,proto3" json:"organizationUserList"`
	Total                int32                      `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *GetUserFullListResp) Reset() {
	*x = GetUserFullListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFullListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFullListResp) ProtoMessage() {}

func (x *GetUserFullListResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFullListResp.ProtoReflect.Descriptor instead.
func (*GetUserFullListResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{66}
}

func (x *GetUserFullListResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserFullListResp) GetOrganizationUserList() []*common.OrganizationUser {
	if x != nil {
		return x.OrganizationUserList
	}
	return nil
}

func (x *GetUserFullListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchUsersFullInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation      *common.Operation         `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation"`
	Pagination     *common.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination"`
	UserPublicInfo *common.UserPublicInfo    `protobuf:"bytes,3,opt,name=userPublicInfo,proto3" json:"userPublicInfo"`
	Content        string                    `protobuf:"bytes,4,opt,name=content,proto3" json:"content"`
}

func (x *SearchUsersFullInfoReq) Reset() {
	*x = SearchUsersFullInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUsersFullInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersFullInfoReq) ProtoMessage() {}

func (x *SearchUsersFullInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsersFullInfoReq.ProtoReflect.Descriptor instead.
func (*SearchUsersFullInfoReq) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{67}
}

func (x *SearchUsersFullInfoReq) GetOperation() *common.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *SearchUsersFullInfoReq) GetPagination() *common.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchUsersFullInfoReq) GetUserPublicInfo() *common.UserPublicInfo {
	if x != nil {
		return x.UserPublicInfo
	}
	return nil
}

func (x *SearchUsersFullInfoReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SearchUsersFullInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp           *common.CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp"`
	OrganizationUserList []*common.OrganizationUser `protobuf:"bytes,2,rep,name=organizationUserList,proto3" json:"organizationUserList"`
	Total                int32                      `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *SearchUsersFullInfoResp) Reset() {
	*x = SearchUsersFullInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organization_organization_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUsersFullInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersFullInfoResp) ProtoMessage() {}

func (x *SearchUsersFullInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_organization_organization_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsersFullInfoResp.ProtoReflect.Descriptor instead.
func (*SearchUsersFullInfoResp) Descriptor() ([]byte, []int) {
	return file_organization_organization_proto_rawDescGZIP(), []int{68}
}

func (x *SearchUsersFullInfoResp) GetCommonResp() *common.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *SearchUsersFullInfoResp) GetOrganizationUserList() []*common.OrganizationUser {
	if x != nil {
		return x.OrganizationUserList
	}
	return nil
}

func (x *SearchUsersFullInfoResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_organization_organization_proto protoreflect.FileDescriptor

var file_organization_organization_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9a, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x45, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9c, 0x01, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x45, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x5c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xa6, 0x01,
	0x0a, 0x0e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3d, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x55, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x11, 0x73, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a,
	0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x64, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x82, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x4f, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xaa, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x4f, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x5b, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xaa, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x4f, 0x0a, 0x10, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x10, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6e, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xa9, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x4f, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x5b, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x95, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x5b, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x71, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5b, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x8e, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5c,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xad, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x11, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x5a, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xd9, 0x02, 0x0a, 0x14, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x65, 0x78, 0x22, 0x9f, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x92, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xbe, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x44, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x05,
	0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x43, 0x0a,
	0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x52, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x99, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x22, 0xce, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x14, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x14, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x45, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x17, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x17, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x73, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x49, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x27, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x02, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x74, 0x0a, 0x14, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x14, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x15, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2a, 0x0a,
	0x10, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x16, 0x53, 0x6f, 0x72,
	0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xb7, 0x01, 0x0a, 0x1b, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x6e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x1c,
	0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x74, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xcd, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x4f, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x14, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x14, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x43, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x60, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x65, 0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x66, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x89, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x1d, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x69, 0x0a, 0x25, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x68,
	0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x04,
	0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x6c,
	0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55,
	0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52,
	0x4c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x76, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x16, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd7, 0x02,
	0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61,
	0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x6a, 0x0a, 0x14, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x56,
	0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xac, 0x02, 0x0a, 0x12, 0x4d, 0x6f, 0x76,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xba, 0x01, 0x0a, 0x15, 0x4d, 0x6f, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x63, 0x0a, 0x16, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x16, 0x6d, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x16, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb2, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x75,
	0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x14, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x14, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xff, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x44, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x17, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x14, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x14, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x32, 0xe7, 0x17, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x8a, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x36, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x2a, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x81, 0x01,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x81, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x33, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x81, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x32, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x81, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x78, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x81, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x32, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x81, 0x01, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x72, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x2c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x84, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x34, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x75, 0x0a, 0x12, 0x53, 0x6f, 0x72, 0x74, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x87,
	0x01, 0x0a, 0x18, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x35, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x90, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x37, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x38, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a,
	0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x75, 0x0a, 0x12, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x78, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x42, 0x32,
	0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x53, 0x44, 0x4b, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_organization_organization_proto_rawDescOnce sync.Once
	file_organization_organization_proto_rawDescData = file_organization_organization_proto_rawDesc
)

func file_organization_organization_proto_rawDescGZIP() []byte {
	file_organization_organization_proto_rawDescOnce.Do(func() {
		file_organization_organization_proto_rawDescData = protoimpl.X.CompressGZIP(file_organization_organization_proto_rawDescData)
	})
	return file_organization_organization_proto_rawDescData
}

var file_organization_organization_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_organization_organization_proto_goTypes = []interface{}{
	(*CreateDepartmentReq)(nil),                     // 0: OpenIMChat.organization.CreateDepartmentReq
	(*CreateDepartmentResp)(nil),                    // 1: OpenIMChat.organization.CreateDepartmentResp
	(*UpdateDepartmentReq)(nil),                     // 2: OpenIMChat.organization.UpdateDepartmentReq
	(*UpdateDepartmentResp)(nil),                    // 3: OpenIMChat.organization.UpdateDepartmentResp
	(*GetOrganizationDepartmentReq)(nil),            // 4: OpenIMChat.organization.GetOrganizationDepartmentReq
	(*DepartmentInfo)(nil),                          // 5: OpenIMChat.organization.DepartmentInfo
	(*GetOrganizationDepartmentResp)(nil),           // 6: OpenIMChat.organization.GetOrganizationDepartmentResp
	(*DeleteDepartmentReq)(nil),                     // 7: OpenIMChat.organization.DeleteDepartmentReq
	(*DeleteDepartmentResp)(nil),                    // 8: OpenIMChat.organization.DeleteDepartmentResp
	(*GetDepartmentParentIDListReq)(nil),            // 9: OpenIMChat.organization.GetDepartmentParentIDListReq
	(*GetDepartmentParentIDListResp)(nil),           // 10: OpenIMChat.organization.GetDepartmentParentIDListResp
	(*CreateOrganizationUserReq)(nil),               // 11: OpenIMChat.organization.CreateOrganizationUserReq
	(*CreateOrganizationUserResp)(nil),              // 12: OpenIMChat.organization.CreateOrganizationUserResp
	(*UpdateOrganizationUserReq)(nil),               // 13: OpenIMChat.organization.UpdateOrganizationUserReq
	(*UpdateOrganizationUserResp)(nil),              // 14: OpenIMChat.organization.UpdateOrganizationUserResp
	(*CreateDepartmentMemberReq)(nil),               // 15: OpenIMChat.organization.CreateDepartmentMemberReq
	(*CreateDepartmentMemberResp)(nil),              // 16: OpenIMChat.organization.CreateDepartmentMemberResp
	(*GetUserInDepartmentReq)(nil),                  // 17: OpenIMChat.organization.GetUserInDepartmentReq
	(*GetUserInDepartmentResp)(nil),                 // 18: OpenIMChat.organization.GetUserInDepartmentResp
	(*UpdateUserInDepartmentReq)(nil),               // 19: OpenIMChat.organization.UpdateUserInDepartmentReq
	(*UpdateUserInDepartmentResp)(nil),              // 20: OpenIMChat.organization.UpdateUserInDepartmentResp
	(*DeleteUserInDepartmentReq)(nil),               // 21: OpenIMChat.organization.DeleteUserInDepartmentReq
	(*DeleteUserInDepartmentResp)(nil),              // 22: OpenIMChat.organization.DeleteUserInDepartmentResp
	(*DeleteOrganizationUserReq)(nil),               // 23: OpenIMChat.organization.DeleteOrganizationUserReq
	(*DeleteOrganizationUserResp)(nil),              // 24: OpenIMChat.organization.DeleteOrganizationUserResp
	(*GetDepartmentRelatedGroupIDListReq)(nil),      // 25: OpenIMChat.organization.GetDepartmentRelatedGroupIDListReq
	(*GetDepartmentRelatedGroupIDListResp)(nil),     // 26: OpenIMChat.organization.GetDepartmentRelatedGroupIDListResp
	(*GetUserInOrganizationReq)(nil),                // 27: OpenIMChat.organization.GetUserInOrganizationReq
	(*GetUserInOrganizationResp)(nil),               // 28: OpenIMChat.organization.GetUserInOrganizationResp
	(*GetCompleteOrganizationReq)(nil),              // 29: OpenIMChat.organization.GetCompleteOrganizationReq
	(*CompleteOrganization)(nil),                    // 30: OpenIMChat.organization.CompleteOrganization
	(*GetCompleteOrganizationResp)(nil),             // 31: OpenIMChat.organization.GetCompleteOrganizationResp
	(*GetUsersInDepartmentReq)(nil),                 // 32: OpenIMChat.organization.GetUsersInDepartmentReq
	(*GetUsersInDepartmentResp)(nil),                // 33: OpenIMChat.organization.GetUsersInDepartmentResp
	(*GetSearchUserListReq)(nil),                    // 34: OpenIMChat.organization.GetSearchUserListReq
	(*GetSearchUserListSort)(nil),                   // 35: OpenIMChat.organization.GetSearchUserListSort
	(*GetSearchUserListResp)(nil),                   // 36: OpenIMChat.organization.GetSearchUserListResp
	(*SetOrganizationReq)(nil),                      // 37: OpenIMChat.organization.SetOrganizationReq
	(*SetOrganizationResp)(nil),                     // 38: OpenIMChat.organization.SetOrganizationResp
	(*GetOrganizationReq)(nil),                      // 39: OpenIMChat.organization.GetOrganizationReq
	(*GetOrganizationResp)(nil),                     // 40: OpenIMChat.organization.GetOrganizationResp
	(*GetSubDepartmentReq)(nil),                     // 41: OpenIMChat.organization.GetSubDepartmentReq
	(*GetSubDepartmentResp)(nil),                    // 42: OpenIMChat.organization.GetSubDepartmentResp
	(*GetSearchDepartmentUserReq)(nil),              // 43: OpenIMChat.organization.GetSearchDepartmentUserReq
	(*GetSearchDepartmentUserOrganizationUser)(nil), // 44: OpenIMChat.organization.GetSearchDepartmentUserOrganizationUser
	(*GetSearchDepartmentUserResp)(nil),             // 45: OpenIMChat.organization.GetSearchDepartmentUserResp
	(*SortDepartmentListReq)(nil),                   // 46: OpenIMChat.organization.SortDepartmentListReq
	(*SortDepartmentListResp)(nil),                  // 47: OpenIMChat.organization.SortDepartmentListResp
	(*SortOrganizationUserListReq)(nil),             // 48: OpenIMChat.organization.SortOrganizationUserListReq
	(*SortOrganizationUserListResp)(nil),            // 49: OpenIMChat.organization.SortOrganizationUserListResp
	(*GetDepartmentReq)(nil),                        // 50: OpenIMChat.organization.GetDepartmentReq
	(*GetDepartmentResp)(nil),                       // 51: OpenIMChat.organization.GetDepartmentResp
	(*CreateNewOrganizationMemberReq)(nil),          // 52: OpenIMChat.organization.CreateNewOrganizationMemberReq
	(*CreateNewOrganizationMemberResp)(nil),         // 53: OpenIMChat.organization.CreateNewOrganizationMemberResp
	(*GetUserInfoReq)(nil),                          // 54: OpenIMChat.organization.GetUserInfoReq
	(*GetUserInfoResp)(nil),                         // 55: OpenIMChat.organization.GetUserInfoResp
	(*BatchImportUserDepartmentName)(nil),           // 56: OpenIMChat.organization.BatchImportUserDepartmentName
	(*BatchImportUserDepartmentNamePosition)(nil),   // 57: OpenIMChat.organization.BatchImportUserDepartmentNamePosition
	(*BatchImportUser)(nil),                         // 58: OpenIMChat.organization.BatchImportUser
	(*BatchImportDepartment)(nil),                   // 59: OpenIMChat.organization.BatchImportDepartment
	(*BatchImportReq)(nil),                          // 60: OpenIMChat.organization.BatchImportReq
	(*BatchImportResp)(nil),                         // 61: OpenIMChat.organization.BatchImportResp
	(*MoveUserDepartment)(nil),                      // 62: OpenIMChat.organization.MoveUserDepartment
	(*MoveUserDepartmentReq)(nil),                   // 63: OpenIMChat.organization.MoveUserDepartmentReq
	(*MoveUserDepartmentResp)(nil),                  // 64: OpenIMChat.organization.MoveUserDepartmentResp
	(*GetUserFullListReq)(nil),                      // 65: OpenIMChat.organization.GetUserFullListReq
	(*GetUserFullListResp)(nil),                     // 66: OpenIMChat.organization.GetUserFullListResp
	(*SearchUsersFullInfoReq)(nil),                  // 67: OpenIMChat.organization.SearchUsersFullInfoReq
	(*SearchUsersFullInfoResp)(nil),                 // 68: OpenIMChat.organization.SearchUsersFullInfoResp
	(*common.Department)(nil),                       // 69: OpenIMChat.common.Department
	(*common.CommonResp)(nil),                       // 70: OpenIMChat.common.CommonResp
	(*common.OrganizationUser)(nil),                 // 71: OpenIMChat.common.OrganizationUser
	(*common.DepartmentMember)(nil),                 // 72: OpenIMChat.common.DepartmentMember
	(*common.UserInDepartment)(nil),                 // 73: OpenIMChat.common.UserInDepartment
	(*common.Organization)(nil),                     // 74: OpenIMChat.common.Organization
	(*common.UserIdentity)(nil),                     // 75: OpenIMChat.common.UserIdentity
	(*common.Operation)(nil),                        // 76: OpenIMChat.common.Operation
	(*common.RequestPagination)(nil),                // 77: OpenIMChat.common.RequestPagination
	(*common.UserPublicInfo)(nil),                   // 78: OpenIMChat.common.UserPublicInfo
}
var file_organization_organization_proto_depIdxs = []int32{
	69, // 0: OpenIMChat.organization.CreateDepartmentReq.departmentInfo:type_name -> OpenIMChat.common.Department
	70, // 1: OpenIMChat.organization.CreateDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	69, // 2: OpenIMChat.organization.CreateDepartmentResp.departmentInfo:type_name -> OpenIMChat.common.Department
	69, // 3: OpenIMChat.organization.UpdateDepartmentReq.departmentInfo:type_name -> OpenIMChat.common.Department
	70, // 4: OpenIMChat.organization.UpdateDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	69, // 5: OpenIMChat.organization.DepartmentInfo.department:type_name -> OpenIMChat.common.Department
	5,  // 6: OpenIMChat.organization.DepartmentInfo.subDepartmentList:type_name -> OpenIMChat.organization.DepartmentInfo
	70, // 7: OpenIMChat.organization.GetOrganizationDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	5,  // 8: OpenIMChat.organization.GetOrganizationDepartmentResp.departmentList:type_name -> OpenIMChat.organization.DepartmentInfo
	70, // 9: OpenIMChat.organization.DeleteDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 10: OpenIMChat.organization.GetDepartmentParentIDListResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	71, // 11: OpenIMChat.organization.CreateOrganizationUserReq.organizationUser:type_name -> OpenIMChat.common.OrganizationUser
	70, // 12: OpenIMChat.organization.CreateOrganizationUserResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	71, // 13: OpenIMChat.organization.UpdateOrganizationUserReq.organizationUser:type_name -> OpenIMChat.common.OrganizationUser
	70, // 14: OpenIMChat.organization.UpdateOrganizationUserResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	72, // 15: OpenIMChat.organization.CreateDepartmentMemberReq.departmentMember:type_name -> OpenIMChat.common.DepartmentMember
	70, // 16: OpenIMChat.organization.CreateDepartmentMemberResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 17: OpenIMChat.organization.GetUserInDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	73, // 18: OpenIMChat.organization.GetUserInDepartmentResp.userInDepartment:type_name -> OpenIMChat.common.UserInDepartment
	72, // 19: OpenIMChat.organization.UpdateUserInDepartmentReq.departmentMember:type_name -> OpenIMChat.common.DepartmentMember
	70, // 20: OpenIMChat.organization.UpdateUserInDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 21: OpenIMChat.organization.DeleteUserInDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 22: OpenIMChat.organization.DeleteOrganizationUserResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 23: OpenIMChat.organization.GetDepartmentRelatedGroupIDListResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 24: OpenIMChat.organization.GetUserInOrganizationResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	71, // 25: OpenIMChat.organization.GetUserInOrganizationResp.organizationUsers:type_name -> OpenIMChat.common.OrganizationUser
	30, // 26: OpenIMChat.organization.CompleteOrganization.list:type_name -> OpenIMChat.organization.CompleteOrganization
	70, // 27: OpenIMChat.organization.GetCompleteOrganizationResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	30, // 28: OpenIMChat.organization.GetCompleteOrganizationResp.list:type_name -> OpenIMChat.organization.CompleteOrganization
	70, // 29: OpenIMChat.organization.GetUsersInDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	73, // 30: OpenIMChat.organization.GetUsersInDepartmentResp.list:type_name -> OpenIMChat.common.UserInDepartment
	35, // 31: OpenIMChat.organization.GetSearchUserListReq.sorts:type_name -> OpenIMChat.organization.GetSearchUserListSort
	70, // 32: OpenIMChat.organization.GetSearchUserListResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	73, // 33: OpenIMChat.organization.GetSearchUserListResp.userList:type_name -> OpenIMChat.common.UserInDepartment
	74, // 34: OpenIMChat.organization.SetOrganizationReq.organization:type_name -> OpenIMChat.common.Organization
	70, // 35: OpenIMChat.organization.SetOrganizationResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 36: OpenIMChat.organization.GetOrganizationResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	74, // 37: OpenIMChat.organization.GetOrganizationResp.organization:type_name -> OpenIMChat.common.Organization
	70, // 38: OpenIMChat.organization.GetSubDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	72, // 39: OpenIMChat.organization.GetSubDepartmentResp.departmentMemberList:type_name -> OpenIMChat.common.DepartmentMember
	69, // 40: OpenIMChat.organization.GetSubDepartmentResp.departmentList:type_name -> OpenIMChat.common.Department
	69, // 41: OpenIMChat.organization.GetSubDepartmentResp.departmentDirectoryList:type_name -> OpenIMChat.common.Department
	71, // 42: OpenIMChat.organization.GetSearchDepartmentUserOrganizationUser.organizationUser:type_name -> OpenIMChat.common.OrganizationUser
	69, // 43: OpenIMChat.organization.GetSearchDepartmentUserOrganizationUser.departmentList:type_name -> OpenIMChat.common.Department
	70, // 44: OpenIMChat.organization.GetSearchDepartmentUserResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	69, // 45: OpenIMChat.organization.GetSearchDepartmentUserResp.departmentList:type_name -> OpenIMChat.common.Department
	44, // 46: OpenIMChat.organization.GetSearchDepartmentUserResp.organizationUserList:type_name -> OpenIMChat.organization.GetSearchDepartmentUserOrganizationUser
	70, // 47: OpenIMChat.organization.SortDepartmentListResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 48: OpenIMChat.organization.SortOrganizationUserListResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 49: OpenIMChat.organization.GetDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	69, // 50: OpenIMChat.organization.GetDepartmentResp.department:type_name -> OpenIMChat.common.Department
	71, // 51: OpenIMChat.organization.CreateNewOrganizationMemberReq.organizationUser:type_name -> OpenIMChat.common.OrganizationUser
	72, // 52: OpenIMChat.organization.CreateNewOrganizationMemberReq.departmentMemberList:type_name -> OpenIMChat.common.DepartmentMember
	75, // 53: OpenIMChat.organization.CreateNewOrganizationMemberReq.userIdentity:type_name -> OpenIMChat.common.UserIdentity
	70, // 54: OpenIMChat.organization.CreateNewOrganizationMemberResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 55: OpenIMChat.organization.GetUserInfoResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	71, // 56: OpenIMChat.organization.GetUserInfoResp.user:type_name -> OpenIMChat.common.OrganizationUser
	57, // 57: OpenIMChat.organization.BatchImportUser.userDepartmentNameList:type_name -> OpenIMChat.organization.BatchImportUserDepartmentNamePosition
	56, // 58: OpenIMChat.organization.BatchImportDepartment.parentDepartmentName:type_name -> OpenIMChat.organization.BatchImportUserDepartmentName
	58, // 59: OpenIMChat.organization.BatchImportReq.userList:type_name -> OpenIMChat.organization.BatchImportUser
	59, // 60: OpenIMChat.organization.BatchImportReq.departmentList:type_name -> OpenIMChat.organization.BatchImportDepartment
	70, // 61: OpenIMChat.organization.BatchImportResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	62, // 62: OpenIMChat.organization.MoveUserDepartmentReq.moveUserDepartmentList:type_name -> OpenIMChat.organization.MoveUserDepartment
	70, // 63: OpenIMChat.organization.MoveUserDepartmentResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	70, // 64: OpenIMChat.organization.GetUserFullListResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	71, // 65: OpenIMChat.organization.GetUserFullListResp.organizationUserList:type_name -> OpenIMChat.common.OrganizationUser
	76, // 66: OpenIMChat.organization.SearchUsersFullInfoReq.operation:type_name -> OpenIMChat.common.Operation
	77, // 67: OpenIMChat.organization.SearchUsersFullInfoReq.pagination:type_name -> OpenIMChat.common.RequestPagination
	78, // 68: OpenIMChat.organization.SearchUsersFullInfoReq.userPublicInfo:type_name -> OpenIMChat.common.UserPublicInfo
	70, // 69: OpenIMChat.organization.SearchUsersFullInfoResp.commonResp:type_name -> OpenIMChat.common.CommonResp
	71, // 70: OpenIMChat.organization.SearchUsersFullInfoResp.organizationUserList:type_name -> OpenIMChat.common.OrganizationUser
	0,  // 71: OpenIMChat.organization.organization.CreateDepartment:input_type -> OpenIMChat.organization.CreateDepartmentReq
	2,  // 72: OpenIMChat.organization.organization.UpdateDepartment:input_type -> OpenIMChat.organization.UpdateDepartmentReq
	4,  // 73: OpenIMChat.organization.organization.GetOrganizationDepartment:input_type -> OpenIMChat.organization.GetOrganizationDepartmentReq
	7,  // 74: OpenIMChat.organization.organization.DeleteDepartment:input_type -> OpenIMChat.organization.DeleteDepartmentReq
	50, // 75: OpenIMChat.organization.organization.GetDepartment:input_type -> OpenIMChat.organization.GetDepartmentReq
	11, // 76: OpenIMChat.organization.organization.CreateOrganizationUser:input_type -> OpenIMChat.organization.CreateOrganizationUserReq
	13, // 77: OpenIMChat.organization.organization.UpdateOrganizationUser:input_type -> OpenIMChat.organization.UpdateOrganizationUserReq
	23, // 78: OpenIMChat.organization.organization.DeleteOrganizationUser:input_type -> OpenIMChat.organization.DeleteOrganizationUserReq
	15, // 79: OpenIMChat.organization.organization.CreateDepartmentMember:input_type -> OpenIMChat.organization.CreateDepartmentMemberReq
	17, // 80: OpenIMChat.organization.organization.GetUserInDepartment:input_type -> OpenIMChat.organization.GetUserInDepartmentReq
	21, // 81: OpenIMChat.organization.organization.DeleteUserInDepartment:input_type -> OpenIMChat.organization.DeleteUserInDepartmentReq
	19, // 82: OpenIMChat.organization.organization.UpdateUserInDepartment:input_type -> OpenIMChat.organization.UpdateUserInDepartmentReq
	34, // 83: OpenIMChat.organization.organization.GetSearchUserList:input_type -> OpenIMChat.organization.GetSearchUserListReq
	37, // 84: OpenIMChat.organization.organization.SetOrganization:input_type -> OpenIMChat.organization.SetOrganizationReq
	39, // 85: OpenIMChat.organization.organization.GetOrganization:input_type -> OpenIMChat.organization.GetOrganizationReq
	41, // 86: OpenIMChat.organization.organization.GetSubDepartment:input_type -> OpenIMChat.organization.GetSubDepartmentReq
	43, // 87: OpenIMChat.organization.organization.GetSearchDepartmentUser:input_type -> OpenIMChat.organization.GetSearchDepartmentUserReq
	46, // 88: OpenIMChat.organization.organization.SortDepartmentList:input_type -> OpenIMChat.organization.SortDepartmentListReq
	48, // 89: OpenIMChat.organization.organization.SortOrganizationUserList:input_type -> OpenIMChat.organization.SortOrganizationUserListReq
	52, // 90: OpenIMChat.organization.organization.CreateNewOrganizationMember:input_type -> OpenIMChat.organization.CreateNewOrganizationMemberReq
	54, // 91: OpenIMChat.organization.organization.GetUserInfo:input_type -> OpenIMChat.organization.GetUserInfoReq
	60, // 92: OpenIMChat.organization.organization.BatchImport:input_type -> OpenIMChat.organization.BatchImportReq
	63, // 93: OpenIMChat.organization.organization.MoveUserDepartment:input_type -> OpenIMChat.organization.MoveUserDepartmentReq
	65, // 94: OpenIMChat.organization.organization.GetUserFullList:input_type -> OpenIMChat.organization.GetUserFullListReq
	67, // 95: OpenIMChat.organization.organization.SearchUsersFullInfo:input_type -> OpenIMChat.organization.SearchUsersFullInfoReq
	1,  // 96: OpenIMChat.organization.organization.CreateDepartment:output_type -> OpenIMChat.organization.CreateDepartmentResp
	3,  // 97: OpenIMChat.organization.organization.UpdateDepartment:output_type -> OpenIMChat.organization.UpdateDepartmentResp
	6,  // 98: OpenIMChat.organization.organization.GetOrganizationDepartment:output_type -> OpenIMChat.organization.GetOrganizationDepartmentResp
	8,  // 99: OpenIMChat.organization.organization.DeleteDepartment:output_type -> OpenIMChat.organization.DeleteDepartmentResp
	51, // 100: OpenIMChat.organization.organization.GetDepartment:output_type -> OpenIMChat.organization.GetDepartmentResp
	12, // 101: OpenIMChat.organization.organization.CreateOrganizationUser:output_type -> OpenIMChat.organization.CreateOrganizationUserResp
	14, // 102: OpenIMChat.organization.organization.UpdateOrganizationUser:output_type -> OpenIMChat.organization.UpdateOrganizationUserResp
	24, // 103: OpenIMChat.organization.organization.DeleteOrganizationUser:output_type -> OpenIMChat.organization.DeleteOrganizationUserResp
	16, // 104: OpenIMChat.organization.organization.CreateDepartmentMember:output_type -> OpenIMChat.organization.CreateDepartmentMemberResp
	18, // 105: OpenIMChat.organization.organization.GetUserInDepartment:output_type -> OpenIMChat.organization.GetUserInDepartmentResp
	22, // 106: OpenIMChat.organization.organization.DeleteUserInDepartment:output_type -> OpenIMChat.organization.DeleteUserInDepartmentResp
	20, // 107: OpenIMChat.organization.organization.UpdateUserInDepartment:output_type -> OpenIMChat.organization.UpdateUserInDepartmentResp
	36, // 108: OpenIMChat.organization.organization.GetSearchUserList:output_type -> OpenIMChat.organization.GetSearchUserListResp
	38, // 109: OpenIMChat.organization.organization.SetOrganization:output_type -> OpenIMChat.organization.SetOrganizationResp
	40, // 110: OpenIMChat.organization.organization.GetOrganization:output_type -> OpenIMChat.organization.GetOrganizationResp
	42, // 111: OpenIMChat.organization.organization.GetSubDepartment:output_type -> OpenIMChat.organization.GetSubDepartmentResp
	45, // 112: OpenIMChat.organization.organization.GetSearchDepartmentUser:output_type -> OpenIMChat.organization.GetSearchDepartmentUserResp
	47, // 113: OpenIMChat.organization.organization.SortDepartmentList:output_type -> OpenIMChat.organization.SortDepartmentListResp
	49, // 114: OpenIMChat.organization.organization.SortOrganizationUserList:output_type -> OpenIMChat.organization.SortOrganizationUserListResp
	53, // 115: OpenIMChat.organization.organization.CreateNewOrganizationMember:output_type -> OpenIMChat.organization.CreateNewOrganizationMemberResp
	55, // 116: OpenIMChat.organization.organization.GetUserInfo:output_type -> OpenIMChat.organization.GetUserInfoResp
	61, // 117: OpenIMChat.organization.organization.BatchImport:output_type -> OpenIMChat.organization.BatchImportResp
	64, // 118: OpenIMChat.organization.organization.MoveUserDepartment:output_type -> OpenIMChat.organization.MoveUserDepartmentResp
	66, // 119: OpenIMChat.organization.organization.GetUserFullList:output_type -> OpenIMChat.organization.GetUserFullListResp
	68, // 120: OpenIMChat.organization.organization.SearchUsersFullInfo:output_type -> OpenIMChat.organization.SearchUsersFullInfoResp
	96, // [96:121] is the sub-list for method output_type
	71, // [71:96] is the sub-list for method input_type
	71, // [71:71] is the sub-list for extension type_name
	71, // [71:71] is the sub-list for extension extendee
	0,  // [0:71] is the sub-list for field type_name
}

func init() { file_organization_organization_proto_init() }
func file_organization_organization_proto_init() {
	if File_organization_organization_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_organization_organization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepartmentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentParentIDListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentParentIDListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserInDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserInDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentRelatedGroupIDListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentRelatedGroupIDListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompleteOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteOrganization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompleteOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersInDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersInDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSearchUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSearchUserListSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSearchUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSearchDepartmentUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSearchDepartmentUserOrganizationUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSearchDepartmentUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortDepartmentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortDepartmentListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortOrganizationUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortOrganizationUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewOrganizationMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewOrganizationMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchImportUserDepartmentName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchImportUserDepartmentNamePosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchImportUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchImportDepartment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchImportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchImportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveUserDepartment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveUserDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveUserDepartmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFullListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFullListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUsersFullInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organization_organization_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUsersFullInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_organization_organization_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_organization_organization_proto_goTypes,
		DependencyIndexes: file_organization_organization_proto_depIdxs,
		MessageInfos:      file_organization_organization_proto_msgTypes,
	}.Build()
	File_organization_organization_proto = out.File
	file_organization_organization_proto_rawDesc = nil
	file_organization_organization_proto_goTypes = nil
	file_organization_organization_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrganizationClient is the client API for Organization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrganizationClient interface {
	CreateDepartment(ctx context.Context, in *CreateDepartmentReq, opts ...grpc.CallOption) (*CreateDepartmentResp, error)
	UpdateDepartment(ctx context.Context, in *UpdateDepartmentReq, opts ...grpc.CallOption) (*UpdateDepartmentResp, error)
	GetOrganizationDepartment(ctx context.Context, in *GetOrganizationDepartmentReq, opts ...grpc.CallOption) (*GetOrganizationDepartmentResp, error)
	DeleteDepartment(ctx context.Context, in *DeleteDepartmentReq, opts ...grpc.CallOption) (*DeleteDepartmentResp, error)
	GetDepartment(ctx context.Context, in *GetDepartmentReq, opts ...grpc.CallOption) (*GetDepartmentResp, error)
	CreateOrganizationUser(ctx context.Context, in *CreateOrganizationUserReq, opts ...grpc.CallOption) (*CreateOrganizationUserResp, error)
	UpdateOrganizationUser(ctx context.Context, in *UpdateOrganizationUserReq, opts ...grpc.CallOption) (*UpdateOrganizationUserResp, error)
	DeleteOrganizationUser(ctx context.Context, in *DeleteOrganizationUserReq, opts ...grpc.CallOption) (*DeleteOrganizationUserResp, error)
	CreateDepartmentMember(ctx context.Context, in *CreateDepartmentMemberReq, opts ...grpc.CallOption) (*CreateDepartmentMemberResp, error)
	GetUserInDepartment(ctx context.Context, in *GetUserInDepartmentReq, opts ...grpc.CallOption) (*GetUserInDepartmentResp, error)
	DeleteUserInDepartment(ctx context.Context, in *DeleteUserInDepartmentReq, opts ...grpc.CallOption) (*DeleteUserInDepartmentResp, error)
	UpdateUserInDepartment(ctx context.Context, in *UpdateUserInDepartmentReq, opts ...grpc.CallOption) (*UpdateUserInDepartmentResp, error)
	GetSearchUserList(ctx context.Context, in *GetSearchUserListReq, opts ...grpc.CallOption) (*GetSearchUserListResp, error)
	SetOrganization(ctx context.Context, in *SetOrganizationReq, opts ...grpc.CallOption) (*SetOrganizationResp, error)
	GetOrganization(ctx context.Context, in *GetOrganizationReq, opts ...grpc.CallOption) (*GetOrganizationResp, error)
	GetSubDepartment(ctx context.Context, in *GetSubDepartmentReq, opts ...grpc.CallOption) (*GetSubDepartmentResp, error)
	GetSearchDepartmentUser(ctx context.Context, in *GetSearchDepartmentUserReq, opts ...grpc.CallOption) (*GetSearchDepartmentUserResp, error)
	SortDepartmentList(ctx context.Context, in *SortDepartmentListReq, opts ...grpc.CallOption) (*SortDepartmentListResp, error)
	SortOrganizationUserList(ctx context.Context, in *SortOrganizationUserListReq, opts ...grpc.CallOption) (*SortOrganizationUserListResp, error)
	CreateNewOrganizationMember(ctx context.Context, in *CreateNewOrganizationMemberReq, opts ...grpc.CallOption) (*CreateNewOrganizationMemberResp, error)
	GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error)
	BatchImport(ctx context.Context, in *BatchImportReq, opts ...grpc.CallOption) (*BatchImportResp, error)
	MoveUserDepartment(ctx context.Context, in *MoveUserDepartmentReq, opts ...grpc.CallOption) (*MoveUserDepartmentResp, error)
	GetUserFullList(ctx context.Context, in *GetUserFullListReq, opts ...grpc.CallOption) (*GetUserFullListResp, error)
	SearchUsersFullInfo(ctx context.Context, in *SearchUsersFullInfoReq, opts ...grpc.CallOption) (*SearchUsersFullInfoResp, error)
}

type organizationClient struct {
	cc grpc.ClientConnInterface
}

func NewOrganizationClient(cc grpc.ClientConnInterface) OrganizationClient {
	return &organizationClient{cc}
}

func (c *organizationClient) CreateDepartment(ctx context.Context, in *CreateDepartmentReq, opts ...grpc.CallOption) (*CreateDepartmentResp, error) {
	out := new(CreateDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/CreateDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateDepartment(ctx context.Context, in *UpdateDepartmentReq, opts ...grpc.CallOption) (*UpdateDepartmentResp, error) {
	out := new(UpdateDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/UpdateDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetOrganizationDepartment(ctx context.Context, in *GetOrganizationDepartmentReq, opts ...grpc.CallOption) (*GetOrganizationDepartmentResp, error) {
	out := new(GetOrganizationDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetOrganizationDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteDepartment(ctx context.Context, in *DeleteDepartmentReq, opts ...grpc.CallOption) (*DeleteDepartmentResp, error) {
	out := new(DeleteDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/DeleteDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetDepartment(ctx context.Context, in *GetDepartmentReq, opts ...grpc.CallOption) (*GetDepartmentResp, error) {
	out := new(GetDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) CreateOrganizationUser(ctx context.Context, in *CreateOrganizationUserReq, opts ...grpc.CallOption) (*CreateOrganizationUserResp, error) {
	out := new(CreateOrganizationUserResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/CreateOrganizationUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateOrganizationUser(ctx context.Context, in *UpdateOrganizationUserReq, opts ...grpc.CallOption) (*UpdateOrganizationUserResp, error) {
	out := new(UpdateOrganizationUserResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/UpdateOrganizationUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteOrganizationUser(ctx context.Context, in *DeleteOrganizationUserReq, opts ...grpc.CallOption) (*DeleteOrganizationUserResp, error) {
	out := new(DeleteOrganizationUserResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/DeleteOrganizationUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) CreateDepartmentMember(ctx context.Context, in *CreateDepartmentMemberReq, opts ...grpc.CallOption) (*CreateDepartmentMemberResp, error) {
	out := new(CreateDepartmentMemberResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/CreateDepartmentMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetUserInDepartment(ctx context.Context, in *GetUserInDepartmentReq, opts ...grpc.CallOption) (*GetUserInDepartmentResp, error) {
	out := new(GetUserInDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetUserInDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteUserInDepartment(ctx context.Context, in *DeleteUserInDepartmentReq, opts ...grpc.CallOption) (*DeleteUserInDepartmentResp, error) {
	out := new(DeleteUserInDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/DeleteUserInDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateUserInDepartment(ctx context.Context, in *UpdateUserInDepartmentReq, opts ...grpc.CallOption) (*UpdateUserInDepartmentResp, error) {
	out := new(UpdateUserInDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/UpdateUserInDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetSearchUserList(ctx context.Context, in *GetSearchUserListReq, opts ...grpc.CallOption) (*GetSearchUserListResp, error) {
	out := new(GetSearchUserListResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetSearchUserList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) SetOrganization(ctx context.Context, in *SetOrganizationReq, opts ...grpc.CallOption) (*SetOrganizationResp, error) {
	out := new(SetOrganizationResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/SetOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetOrganization(ctx context.Context, in *GetOrganizationReq, opts ...grpc.CallOption) (*GetOrganizationResp, error) {
	out := new(GetOrganizationResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetSubDepartment(ctx context.Context, in *GetSubDepartmentReq, opts ...grpc.CallOption) (*GetSubDepartmentResp, error) {
	out := new(GetSubDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetSubDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetSearchDepartmentUser(ctx context.Context, in *GetSearchDepartmentUserReq, opts ...grpc.CallOption) (*GetSearchDepartmentUserResp, error) {
	out := new(GetSearchDepartmentUserResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetSearchDepartmentUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) SortDepartmentList(ctx context.Context, in *SortDepartmentListReq, opts ...grpc.CallOption) (*SortDepartmentListResp, error) {
	out := new(SortDepartmentListResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/SortDepartmentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) SortOrganizationUserList(ctx context.Context, in *SortOrganizationUserListReq, opts ...grpc.CallOption) (*SortOrganizationUserListResp, error) {
	out := new(SortOrganizationUserListResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/SortOrganizationUserList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) CreateNewOrganizationMember(ctx context.Context, in *CreateNewOrganizationMemberReq, opts ...grpc.CallOption) (*CreateNewOrganizationMemberResp, error) {
	out := new(CreateNewOrganizationMemberResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/CreateNewOrganizationMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error) {
	out := new(GetUserInfoResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) BatchImport(ctx context.Context, in *BatchImportReq, opts ...grpc.CallOption) (*BatchImportResp, error) {
	out := new(BatchImportResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/BatchImport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) MoveUserDepartment(ctx context.Context, in *MoveUserDepartmentReq, opts ...grpc.CallOption) (*MoveUserDepartmentResp, error) {
	out := new(MoveUserDepartmentResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/MoveUserDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetUserFullList(ctx context.Context, in *GetUserFullListReq, opts ...grpc.CallOption) (*GetUserFullListResp, error) {
	out := new(GetUserFullListResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/GetUserFullList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) SearchUsersFullInfo(ctx context.Context, in *SearchUsersFullInfoReq, opts ...grpc.CallOption) (*SearchUsersFullInfoResp, error) {
	out := new(SearchUsersFullInfoResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.organization.organization/SearchUsersFullInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrganizationServer is the server API for Organization service.
type OrganizationServer interface {
	CreateDepartment(context.Context, *CreateDepartmentReq) (*CreateDepartmentResp, error)
	UpdateDepartment(context.Context, *UpdateDepartmentReq) (*UpdateDepartmentResp, error)
	GetOrganizationDepartment(context.Context, *GetOrganizationDepartmentReq) (*GetOrganizationDepartmentResp, error)
	DeleteDepartment(context.Context, *DeleteDepartmentReq) (*DeleteDepartmentResp, error)
	GetDepartment(context.Context, *GetDepartmentReq) (*GetDepartmentResp, error)
	CreateOrganizationUser(context.Context, *CreateOrganizationUserReq) (*CreateOrganizationUserResp, error)
	UpdateOrganizationUser(context.Context, *UpdateOrganizationUserReq) (*UpdateOrganizationUserResp, error)
	DeleteOrganizationUser(context.Context, *DeleteOrganizationUserReq) (*DeleteOrganizationUserResp, error)
	CreateDepartmentMember(context.Context, *CreateDepartmentMemberReq) (*CreateDepartmentMemberResp, error)
	GetUserInDepartment(context.Context, *GetUserInDepartmentReq) (*GetUserInDepartmentResp, error)
	DeleteUserInDepartment(context.Context, *DeleteUserInDepartmentReq) (*DeleteUserInDepartmentResp, error)
	UpdateUserInDepartment(context.Context, *UpdateUserInDepartmentReq) (*UpdateUserInDepartmentResp, error)
	GetSearchUserList(context.Context, *GetSearchUserListReq) (*GetSearchUserListResp, error)
	SetOrganization(context.Context, *SetOrganizationReq) (*SetOrganizationResp, error)
	GetOrganization(context.Context, *GetOrganizationReq) (*GetOrganizationResp, error)
	GetSubDepartment(context.Context, *GetSubDepartmentReq) (*GetSubDepartmentResp, error)
	GetSearchDepartmentUser(context.Context, *GetSearchDepartmentUserReq) (*GetSearchDepartmentUserResp, error)
	SortDepartmentList(context.Context, *SortDepartmentListReq) (*SortDepartmentListResp, error)
	SortOrganizationUserList(context.Context, *SortOrganizationUserListReq) (*SortOrganizationUserListResp, error)
	CreateNewOrganizationMember(context.Context, *CreateNewOrganizationMemberReq) (*CreateNewOrganizationMemberResp, error)
	GetUserInfo(context.Context, *GetUserInfoReq) (*GetUserInfoResp, error)
	BatchImport(context.Context, *BatchImportReq) (*BatchImportResp, error)
	MoveUserDepartment(context.Context, *MoveUserDepartmentReq) (*MoveUserDepartmentResp, error)
	GetUserFullList(context.Context, *GetUserFullListReq) (*GetUserFullListResp, error)
	SearchUsersFullInfo(context.Context, *SearchUsersFullInfoReq) (*SearchUsersFullInfoResp, error)
}

// UnimplementedOrganizationServer can be embedded to have forward compatible implementations.
type UnimplementedOrganizationServer struct {
}

func (*UnimplementedOrganizationServer) CreateDepartment(context.Context, *CreateDepartmentReq) (*CreateDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDepartment not implemented")
}
func (*UnimplementedOrganizationServer) UpdateDepartment(context.Context, *UpdateDepartmentReq) (*UpdateDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDepartment not implemented")
}
func (*UnimplementedOrganizationServer) GetOrganizationDepartment(context.Context, *GetOrganizationDepartmentReq) (*GetOrganizationDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganizationDepartment not implemented")
}
func (*UnimplementedOrganizationServer) DeleteDepartment(context.Context, *DeleteDepartmentReq) (*DeleteDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDepartment not implemented")
}
func (*UnimplementedOrganizationServer) GetDepartment(context.Context, *GetDepartmentReq) (*GetDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDepartment not implemented")
}
func (*UnimplementedOrganizationServer) CreateOrganizationUser(context.Context, *CreateOrganizationUserReq) (*CreateOrganizationUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrganizationUser not implemented")
}
func (*UnimplementedOrganizationServer) UpdateOrganizationUser(context.Context, *UpdateOrganizationUserReq) (*UpdateOrganizationUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrganizationUser not implemented")
}
func (*UnimplementedOrganizationServer) DeleteOrganizationUser(context.Context, *DeleteOrganizationUserReq) (*DeleteOrganizationUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOrganizationUser not implemented")
}
func (*UnimplementedOrganizationServer) CreateDepartmentMember(context.Context, *CreateDepartmentMemberReq) (*CreateDepartmentMemberResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDepartmentMember not implemented")
}
func (*UnimplementedOrganizationServer) GetUserInDepartment(context.Context, *GetUserInDepartmentReq) (*GetUserInDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInDepartment not implemented")
}
func (*UnimplementedOrganizationServer) DeleteUserInDepartment(context.Context, *DeleteUserInDepartmentReq) (*DeleteUserInDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserInDepartment not implemented")
}
func (*UnimplementedOrganizationServer) UpdateUserInDepartment(context.Context, *UpdateUserInDepartmentReq) (*UpdateUserInDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserInDepartment not implemented")
}
func (*UnimplementedOrganizationServer) GetSearchUserList(context.Context, *GetSearchUserListReq) (*GetSearchUserListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSearchUserList not implemented")
}
func (*UnimplementedOrganizationServer) SetOrganization(context.Context, *SetOrganizationReq) (*SetOrganizationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOrganization not implemented")
}
func (*UnimplementedOrganizationServer) GetOrganization(context.Context, *GetOrganizationReq) (*GetOrganizationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganization not implemented")
}
func (*UnimplementedOrganizationServer) GetSubDepartment(context.Context, *GetSubDepartmentReq) (*GetSubDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubDepartment not implemented")
}
func (*UnimplementedOrganizationServer) GetSearchDepartmentUser(context.Context, *GetSearchDepartmentUserReq) (*GetSearchDepartmentUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSearchDepartmentUser not implemented")
}
func (*UnimplementedOrganizationServer) SortDepartmentList(context.Context, *SortDepartmentListReq) (*SortDepartmentListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortDepartmentList not implemented")
}
func (*UnimplementedOrganizationServer) SortOrganizationUserList(context.Context, *SortOrganizationUserListReq) (*SortOrganizationUserListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortOrganizationUserList not implemented")
}
func (*UnimplementedOrganizationServer) CreateNewOrganizationMember(context.Context, *CreateNewOrganizationMemberReq) (*CreateNewOrganizationMemberResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNewOrganizationMember not implemented")
}
func (*UnimplementedOrganizationServer) GetUserInfo(context.Context, *GetUserInfoReq) (*GetUserInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedOrganizationServer) BatchImport(context.Context, *BatchImportReq) (*BatchImportResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchImport not implemented")
}
func (*UnimplementedOrganizationServer) MoveUserDepartment(context.Context, *MoveUserDepartmentReq) (*MoveUserDepartmentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveUserDepartment not implemented")
}
func (*UnimplementedOrganizationServer) GetUserFullList(context.Context, *GetUserFullListReq) (*GetUserFullListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserFullList not implemented")
}
func (*UnimplementedOrganizationServer) SearchUsersFullInfo(context.Context, *SearchUsersFullInfoReq) (*SearchUsersFullInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUsersFullInfo not implemented")
}

func RegisterOrganizationServer(s *grpc.Server, srv OrganizationServer) {
	s.RegisterService(&_Organization_serviceDesc, srv)
}

func _Organization_CreateDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/CreateDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateDepartment(ctx, req.(*CreateDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/UpdateDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateDepartment(ctx, req.(*UpdateDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetOrganizationDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetOrganizationDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetOrganizationDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetOrganizationDepartment(ctx, req.(*GetOrganizationDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/DeleteDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteDepartment(ctx, req.(*DeleteDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetDepartment(ctx, req.(*GetDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_CreateOrganizationUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrganizationUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateOrganizationUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/CreateOrganizationUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateOrganizationUser(ctx, req.(*CreateOrganizationUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateOrganizationUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrganizationUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateOrganizationUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/UpdateOrganizationUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateOrganizationUser(ctx, req.(*UpdateOrganizationUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteOrganizationUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrganizationUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteOrganizationUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/DeleteOrganizationUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteOrganizationUser(ctx, req.(*DeleteOrganizationUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_CreateDepartmentMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDepartmentMemberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateDepartmentMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/CreateDepartmentMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateDepartmentMember(ctx, req.(*CreateDepartmentMemberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetUserInDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetUserInDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetUserInDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetUserInDepartment(ctx, req.(*GetUserInDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteUserInDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserInDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteUserInDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/DeleteUserInDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteUserInDepartment(ctx, req.(*DeleteUserInDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateUserInDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserInDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateUserInDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/UpdateUserInDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateUserInDepartment(ctx, req.(*UpdateUserInDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetSearchUserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSearchUserListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetSearchUserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetSearchUserList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetSearchUserList(ctx, req.(*GetSearchUserListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_SetOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetOrganizationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).SetOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/SetOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).SetOrganization(ctx, req.(*SetOrganizationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetOrganization(ctx, req.(*GetOrganizationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetSubDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetSubDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetSubDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetSubDepartment(ctx, req.(*GetSubDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetSearchDepartmentUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSearchDepartmentUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetSearchDepartmentUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetSearchDepartmentUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetSearchDepartmentUser(ctx, req.(*GetSearchDepartmentUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_SortDepartmentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortDepartmentListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).SortDepartmentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/SortDepartmentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).SortDepartmentList(ctx, req.(*SortDepartmentListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_SortOrganizationUserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortOrganizationUserListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).SortOrganizationUserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/SortOrganizationUserList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).SortOrganizationUserList(ctx, req.(*SortOrganizationUserListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_CreateNewOrganizationMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNewOrganizationMemberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateNewOrganizationMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/CreateNewOrganizationMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateNewOrganizationMember(ctx, req.(*CreateNewOrganizationMemberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetUserInfo(ctx, req.(*GetUserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_BatchImport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchImportReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).BatchImport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/BatchImport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).BatchImport(ctx, req.(*BatchImportReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_MoveUserDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveUserDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).MoveUserDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/MoveUserDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).MoveUserDepartment(ctx, req.(*MoveUserDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetUserFullList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserFullListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetUserFullList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/GetUserFullList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetUserFullList(ctx, req.(*GetUserFullListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_SearchUsersFullInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchUsersFullInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).SearchUsersFullInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.organization.organization/SearchUsersFullInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).SearchUsersFullInfo(ctx, req.(*SearchUsersFullInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Organization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenIMChat.organization.organization",
	HandlerType: (*OrganizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDepartment",
			Handler:    _Organization_CreateDepartment_Handler,
		},
		{
			MethodName: "UpdateDepartment",
			Handler:    _Organization_UpdateDepartment_Handler,
		},
		{
			MethodName: "GetOrganizationDepartment",
			Handler:    _Organization_GetOrganizationDepartment_Handler,
		},
		{
			MethodName: "DeleteDepartment",
			Handler:    _Organization_DeleteDepartment_Handler,
		},
		{
			MethodName: "GetDepartment",
			Handler:    _Organization_GetDepartment_Handler,
		},
		{
			MethodName: "CreateOrganizationUser",
			Handler:    _Organization_CreateOrganizationUser_Handler,
		},
		{
			MethodName: "UpdateOrganizationUser",
			Handler:    _Organization_UpdateOrganizationUser_Handler,
		},
		{
			MethodName: "DeleteOrganizationUser",
			Handler:    _Organization_DeleteOrganizationUser_Handler,
		},
		{
			MethodName: "CreateDepartmentMember",
			Handler:    _Organization_CreateDepartmentMember_Handler,
		},
		{
			MethodName: "GetUserInDepartment",
			Handler:    _Organization_GetUserInDepartment_Handler,
		},
		{
			MethodName: "DeleteUserInDepartment",
			Handler:    _Organization_DeleteUserInDepartment_Handler,
		},
		{
			MethodName: "UpdateUserInDepartment",
			Handler:    _Organization_UpdateUserInDepartment_Handler,
		},
		{
			MethodName: "GetSearchUserList",
			Handler:    _Organization_GetSearchUserList_Handler,
		},
		{
			MethodName: "SetOrganization",
			Handler:    _Organization_SetOrganization_Handler,
		},
		{
			MethodName: "GetOrganization",
			Handler:    _Organization_GetOrganization_Handler,
		},
		{
			MethodName: "GetSubDepartment",
			Handler:    _Organization_GetSubDepartment_Handler,
		},
		{
			MethodName: "GetSearchDepartmentUser",
			Handler:    _Organization_GetSearchDepartmentUser_Handler,
		},
		{
			MethodName: "SortDepartmentList",
			Handler:    _Organization_SortDepartmentList_Handler,
		},
		{
			MethodName: "SortOrganizationUserList",
			Handler:    _Organization_SortOrganizationUserList_Handler,
		},
		{
			MethodName: "CreateNewOrganizationMember",
			Handler:    _Organization_CreateNewOrganizationMember_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _Organization_GetUserInfo_Handler,
		},
		{
			MethodName: "BatchImport",
			Handler:    _Organization_BatchImport_Handler,
		},
		{
			MethodName: "MoveUserDepartment",
			Handler:    _Organization_MoveUserDepartment_Handler,
		},
		{
			MethodName: "GetUserFullList",
			Handler:    _Organization_GetUserFullList_Handler,
		},
		{
			MethodName: "SearchUsersFullInfo",
			Handler:    _Organization_SearchUsersFullInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "organization/organization.proto",
}
